<project name    = "GATFileOps"
         default = "build"
         basedir = ".">

  <description>
    Builds the project GATJobRun.
  </description>

  <!-- Get the path to the JavaGAT engine libraries.
       For this, GAT_LOCATION must be set. -->
  <property environment = "env" />

  <!-- just a test for getting pwd -->
  <property name = "currdir" location = "${env.PWD}" />

  <fail message = "Environment variable ${GAT_LOCATION} must be set !">
    <condition>
      <equals
        arg1 = "${env.GAT_LOCATION}"
        arg2 = "$${env.GAT_LOCATION}"
      />
    </condition>
  </fail>

  <!-- Check that it really points to a JavaGAT installation -->
  <available file     = "${env.GAT_LOCATION}/engine"
             type     = "dir"
             property = "gat_engine_dir"
             value    = "${env.GAT_LOCATION}/engine" />
  <!-- Check for an older JavaGAT distribution also -->
  <available file     = "${env.GAT_LOCATION}/JavaGATEngine"
             type     = "dir"
             property = "gat_engine_dir"
             value    = "${env.GAT_LOCATION}/JavaGATEngine" />

  <fail message = "Environment variable ${GAT_LOCATION} doesn't seem to point to a JavaGAT installation !"
        unless  = "gat_engine_dir" />

  <!-- Check that it really points to a JavaGAT adaptor installation -->
  <available file     = "${env.GAT_LOCATION}/adaptors"
             type     = "dir"
             property = "gat_adaptors_dir"
             value    = "${env.GAT_LOCATION}/adaptors" />
  <!-- Check for an older JavaGAT adaptor distribution also -->
  <available file     = "${env.GAT_LOCATION}/JavaGATAdaptors"
             type     = "dir"
             property = "gat_adaptors_dir"
             value    = "${env.GAT_LOCATION}/JavaGATAdaptors" />

  <fail message = "Environment variable ${GAT_LOCATION} doesn't contain JavaGAT adaptors directory !"
        unless  = "gat_adaptors_dir" />


  <property name = "srcdir"   location = "${currdir}/src/fileops" />
  <property name = "builddir" location = "${currdir}/build/classes" />
  <property name = "distdir"  location = "${currdir}/dist" />

  <path id = "gat_engine_jars_path">
    <fileset id  = "gat_engine_jars"
             dir = "${gat_engine_dir}">
      <include name = "lib/GAT.jar" />
      <include name = "lib/colobus.jar" />
      <include name = "lib/log4j-1.2.13.jar" />
      <include name = "lib/ibis-util-1.4.jar" />
      <include name = "lib/commons-logging.jar" />
    </fileset>
    <fileset id  = "gat_supplements_jars"
             dir = "${gat_adaptors_dir}/external">
      <include name = "commons-cli-1.0.jar" />
    </fileset>
  </path>

  <target name        = "build"
          depends     = "clean"
          description = "build the JARs">
    <!-- Create the target directory -->
    <mkdir dir = "${builddir}" />

    <!-- Compile the java code from ${srcdir} into ${builddir} -->
    <javac srcdir  = "${srcdir}"
           destdir = "${builddir}"
           debug   = "on" >
      <classpath refid = "gat_engine_jars_path" />
    </javac>

    <!-- Create the distribution directory
         and copy external libraries into it -->
    <mkdir dir = "${distdir}" />
    <copy todir="${distdir}">
      <fileset refid="gat_engine_jars" />
    </copy>
    <copy todir = "${distdir}/lib">
       <fileset refid="gat_supplements_jars" />
   </copy>

    <!-- Create the JAR from ${builddir} classes -->
    <jar jarfile = "${distdir}/GATFileOps.jar">
      <fileset dir = "${builddir}" />
      <fileset file = "log4j.properties" /> 
      <manifest>
     <attribute name  = "Main-Class"
                   value = "fileops.FileOpsMain" /> 
        <attribute name  = "Class-Path"
                   value = "${currdir}/dist/lib/GAT.jar ${currdir}/dist/lib/colobus.jar ${currdir}/dist/lib/log4j-1.2.13.jar ${currdir}/dist/lib/ibis-util-1.4.jar ${currdir}/dist/lib/commons-cli-1.0.jar ${currdir}/dist/lib/commons-logging.jar" />
      </manifest>
    </jar>

  </target>

  <target name = "clean" description = "clean up">
    <delete dir = "${builddir}"/>
    <delete dir = "${distdir}"/>
  </target>

</project>
